{"version":3,"sources":["components/Home.js","components/ProjectInfo.js","components/LicenseInfo.js","components/Tags.js","components/ServerInfo.js","components/CustomTooltip.js","components/ApiResource.js","components/RequestBodies.js","components/ModalWindow.js","components/ModelBuilder.js","data/DataBuilder.js","components/ApiResponse.js","components/Parameters.js","components/visualizer/SwaggerVisualizer.js","App.js","reportWebVitals.js","index.js"],"names":["data","ProjectInfo","props","state","title","description","version","termsOfService","contact","handleOnChange","bind","handleSubmit","handleOnEdit","resetState","event","target","fieldName","name","fieldValue","value","this","setState","info","project","email","preventDefault","newProject","onChange","undefined","className","onSubmit","id","required","placeholder","htmlFor","style","height","type","align","Object","keys","length","onClick","React","Component","LicenseInfo","url","license","Tags","externalDocsDesc","externalDocsUrl","isEditing","handleChange","handleDelete","updatedProject","tagFound","tags","find","tag","createNew","newTag","externalDocs","push","tagName","filteredTags","filter","selectedTagName","foundTag","tagList","map","index","deleteTagBtn","disabled","initialState","variables","ServerInfo","handleAddNewVariableRow","handleRemoveRow","handleVariableChange","addNewServerVariable","foundServer","servers","variablesToUI","inMemoryRepOfVars","forEach","item","i","serverVar","newVar","default","enum","join","newVariables","foundProject","updateExisting","newServer","currVar","server","serverVariable","serverVarDetails","enumValues","split","existingVars","toRemoveIndex","filteredVars","val","enumValueHeader","uriVariables","uriVar","e","width","aria-label","marginLeft","existingServers","existingServer","CustomTooltip","text","method","operationId","summary","requestBody","responseBody","pathParam","ApiResource","addPathMethod","findComponentReferenceId","findPathBy","populatePathToRender","updatePathMethod","paths","addRequestBody","addResponseBody","addPathParam","foundPath","getPathObjectFromProject","projectPaths","pathUrl","methodName","currentPath","responses","requestBodyId","responseBodyLink","getSuccessResponseBody","responseBodyId","pathSummary","pathParams","foundParams","paramLink","refLink","isNotEmpty","isSelected","$ref","parameters","components","existingTags","tagsList","requestBodies","localRequestBodies","requestBodiesDisplay","localResponseBodies","bodyName","responseBodiesDisplay","localParams","param","pathParamsDisplay","existingPaths","pathMethods","pathDetails","RequestBodies","contentType","schemaName","handleOnSubmit","foundRequestBody","content","schema","reqBodyName","projectSchemas","schemas","localSchemas","schemaDisplayList","displayReqBodies","typeToFormatMapping","ModalWindow","format","readOnly","invokeTrigger","handleOnSave","document","getElementById","click","onSave","selectedPropertyType","formatOptions","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","checked","editing","modalData","existingProperties","ModelBuilder","handleOpenModal","handleOnExistingPropertyChange","handleAddNewPropertyRow","handleOnModalDataSave","itemIndex","itemName","foundProp","savedModalData","existingProps","foundProperty","modelName","foundSchema","toState","toModelStateProp","properties","requiredProps","schemaProps","prop","details","example","indexOf","foundModel","createNewModel","updateExistingModel","it","models","existingModels","existingModelProperties","data-bs-toggle","data-bs-target","Project","openapi","ApiResponse","schemaType","foundResponse","getSchemaObject","console","log","schemaObj","items","responseName","localResponses","displayResponses","Home","handleFileUploadTrigger","handleOnFileUpload","handleOnUpload","file","files","fileReader","FileReader","onload","loadEvent","JSON","parse","result","readAsText","to","Parameters","location","deprecated","allowedEmpty","schemaFormat","schemaEnum","paramName","foundParam","in","allowEmptyValue","getEnumValues","projectParams","existingParameters","SwaggerVisualizer","spec","stringify","App","handleOnUpdate","handleDownloadFile","isHomePage","json","blob","Blob","href","URL","createObjectURL","downloadLink","createElement","download","body","appendChild","removeChild","currenPath","window","pathname","gridTemplateColumns","aria-expanded","aria-current","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6b28f46.chunk.js","sourcesContent":["import React from 'react'\nimport './home.css'\nimport { Link } from 'react-router-dom';\n\nvar data\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.handleFileUploadTrigger = this.handleFileUploadTrigger.bind(this)\n    this.handleOnFileUpload = this.handleOnFileUpload.bind(this)\n    this.handleOnUpload = this.handleOnUpload.bind(this)\n  }\n\n  handleFileUploadTrigger() {\n    document.getElementById('file-upload-input').click()\n  }\n\n  handleOnFileUpload(event) {\n    const file = event.target.files[0]\n    const fileReader = new FileReader()\n    fileReader.onload = function (loadEvent) {\n      data = JSON.parse(loadEvent.target.result)\n    }\n    fileReader.readAsText(file)\n  }\n\n  handleOnUpload() {\n    this.props.onChange(data)\n  }\n\n  render() {\n    return (\n      <div align=\"center\" className=\"main-container row\">\n        <Link className=\"btn btn-dark btn-lg mb-3\" to=\"/project-info\">Start Designing</Link>\n        <button className=\"btn btn-dark btn-lg\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Upload Spec</button>\n\n        <div className=\"standard-flow\">\n          <h4>API Design Flow</h4>\n          <p>\n            The API Design flow to be followed using API Designer starts with creation of dependent entities. Below is the order of flow :\n            <ol>\n              <li>\n                <h6>Basic Config</h6>\n                <div>You start with basic project configurations configuring below details</div>\n                <ul>\n                  <li>\n                    <b>Project:</b> Create a Project\n                  </li>\n                  <li>\n                    <b>License:</b> Define License Info for the Project\n                  </li>\n                  <li>\n                    <b>Tags:</b> Create Tags for API categorization\n                  </li>\n                  <li>\n                    <b>Servers:</b> Define API servers like Dev, Staging, Production, etc.\n                  </li>\n                </ul>\n              </li>\n\n              <li>\n                <h6>Components</h6>\n                <div>Creating resuable components will help in reducing redundancy and efforts. In this section you can create\n                  below mentioned components</div>\n                <ul>\n                  <li>\n                    <b>Models:</b> Define Domain Models for the Project\n                  </li>\n                  <li>\n                    <b>Parameters:</b> Define API Parameters like Path, Query, Header, etc.\n                  </li>\n                  <li>\n                    <b>Request Bodies:</b>Define the structure of Request Body for API\n                  </li>\n                  <li>\n                    <b>Responses:</b>Define the standard responses for the APIs\n                  </li>\n                </ul>\n              </li>\n\n              <li>\n                <h6>API Specs</h6>\n                <div>\n                  Now you are ready with pre-requisites. You can start designing API Resources by clubbing them\n                </div>\n                <ul>\n                  <b>API Resources:</b>Create APIs defining the API resource Endpoints\n                </ul>\n              </li>\n\n            </ol>\n            <ul>\n\n\n            </ul>\n          </p>\n        </div>\n\n        <input id=\"file-upload-input\" onChange={this.handleOnFileUpload} type=\"file\" />\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Upload Spec File</h5>\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <div className=\"modal-body\">\n                <i onClick={this.handleFileUploadTrigger} className=\"bi bi-upload file-upload-icon\"></i>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" onClick={this.handleOnUpload} data-bs-dismiss=\"modal\" className=\"btn btn-primary\">UPLOAD</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Home\n","import React from 'react'\nimport './project-info.css'\n\nclass ProjectInfo extends React.Component {\n\n    constructor(props){\n      super(props)\n      this.state = {\n        title: '',\n        description: '',\n        version: '',\n        termsOfService: '',\n        contact: ''\n      }\n\n      this.handleOnChange = this.handleOnChange.bind(this)\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleOnEdit = this.handleOnEdit.bind(this)\n      this.resetState = this.resetState.bind(this)\n    }\n\n    handleOnChange(event){\n      const target = event.target;\n      const fieldName = target.name;\n      const fieldValue = target.value;\n      this.setState({\n        [fieldName]: fieldValue\n      })\n    }\n\n    handleOnEdit(){\n      const info = this.props.project.info\n      this.setState({\n        title: info.title,\n        description: info.description,\n        version: info.version,\n        termsOfService: info.termsOfService,\n        contact: info.contact.email\n      })\n    }\n\n    handleSubmit(event){\n      event.preventDefault()\n      const newProject = this.props.project\n      newProject.info = {\n        title: this.state.title,\n        description: this.state.description,\n        version: this.state.version,\n        termsOfService: this.state.termsOfService,\n        contact: {\n          email: this.state.contact\n        }\n      }\n      this.props.onChange(newProject)\n      this.resetState()\n    }\n\n    resetState(){\n      this.setState({\n        title: '',\n        description: '',\n        version: '',\n        termsOfService: '',\n        contact: ''\n      })\n    }\n\n    render() {\n        const info = this.props.project.info\n\n        if(info.contact === undefined){\n          info.contact = {}\n        }\n\n        return (\n            <div>\n                <h4 className=\"page-title\">Project Info</h4>\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-floating mb-3\">\n                    <input id=\"projectName\" required name=\"title\" value={this.state.title} onChange={this.handleOnChange} className=\"form-control\" placeholder=\"Ex: Swagger PetStore\" />\n                    <label htmlFor=\"projectName\" className=\"form-label\">Title</label>\n                  </div>\n                  <div className=\"form-floating\">\n                    <textarea id=\"projectDescription\" name=\"description\" value={this.state.description} onChange={this.handleOnChange} className=\"form-control\" style={{height:'80px'}} placeholder=\"Ex: This is a sample server Petstore server\"></textarea>\n                    <label htmlFor=\"projectDescription\">Description</label>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-3\">\n                      <label htmlFor=\"projectVersion\" className=\"form-label custom-label\">Version</label>\n                      <input id=\"projectVersion\" name=\"version\" value={this.state.version} onChange={this.handleOnChange} className=\"form-control form-control-sm\" placeholder=\"1.0.0\" />\n                    </div>\n                    <div className=\"col-9\">\n                      <label htmlFor=\"termsOfService\" className=\"form-label custom-label\">Terms of Service</label>\n                      <input id=\"termsOfService\" type=\"url\" name=\"termsOfService\" value={this.state.termsOfService} onChange={this.handleOnChange} className=\"form-control form-control-sm\" placeholder=\"http://swagger.io/terms/\" />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-6\">\n                      <label htmlFor=\"developerContact\" className=\"form-label custom-label\">Contact</label>\n                      <input id=\"developerContact\" type=\"email\" name=\"contact\" value={this.state.contact} onChange={this.handleOnChange} className=\"form-control form-control-sm\" placeholder=\"apiteam@swagger.io\" />\n                    </div>\n                  </div>\n                  <br/>\n                  <div align=\"center\">\n                    {Object.keys(this.props.project.info).length > 1 &&\n                      <button type=\"button\" className=\"btn btn-dark\" onClick={this.handleOnEdit}>EDIT</button>\n                    }\n                    <button type=\"submit\" className=\"btn btn-dark button-margin\">SAVE</button>\n                  </div>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default ProjectInfo;\n","import React from 'react';\n\nclass LicenseInfo extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      url: ''\n    }\n\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleOnChange(event){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName] : fieldValue\n    })\n  }\n\n  handleSubmit(event){\n    event.preventDefault()\n    const newProject = this.props.project\n    const projectInfo = newProject.info\n    projectInfo.license = {\n      name: this.state.name,\n      url: this.state.url\n    }\n    this.props.onChange(newProject)\n  }\n\n  render(){\n    return(\n      <div>\n        <h4 className=\"page-title\">License Info</h4>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"col-6\">\n            <label htmlFor=\"licenseName\" className=\"form-label custom-label\">Name</label>\n            <input required name=\"name\" value={this.state.name} onChange={this.handleOnChange} id=\"licenseName\" className=\"form-control form-control-md\" placeholder=\"Apache 2.0\" />\n          </div>\n          <div className=\"col-12\">\n            <label htmlFor=\"licenseURL\" className=\"form-label custom-label\">URL</label>\n            <input required type=\"url\" name=\"url\" value={this.state.url} onChange={this.handleOnChange} id=\"licenseURL\" className=\"form-control form-control-md\" placeholder=\"http://www.apache.org/licenses/LICENSE-2.0.html\" />\n          </div>\n          <br/>\n          <div align=\"center\">\n            <button type=\"submit\" className=\"btn btn-dark\">SAVE</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default LicenseInfo;\n","import React from 'react'\nimport './tags.css'\n\nclass Tags extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      name : '',\n      description : '',\n      externalDocsDesc: '',\n      externalDocsUrl: '',\n      isEditing: false\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.resetState = this.resetState.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n\n  resetState(){\n    this.setState({\n      name : '',\n      description : '',\n      externalDocsDesc: '',\n      externalDocsUrl: '',\n      isEditing: false\n    })\n  }\n\n  handleChange(event){\n    const target = event.target;\n    const fieldName = target.name;\n    const fieldValue = target.value;\n    this.setState({\n      [fieldName] : fieldValue\n    })\n  }\n\n  handleSubmit(event){\n    event.preventDefault()\n    const updatedProject = this.props.project\n    const tagFound = updatedProject.tags.find(tag => tag.name === this.state.name)\n\n    if(tagFound === undefined){\n      this.createNew(updatedProject)\n    } else {\n      tagFound.description = this.state.description\n    }\n\n    this.props.onChange(updatedProject)\n    this.resetState()\n  }\n\n  // TODO Move all such mapping logic in one place. Potentially in the DataBuilder.js\n  createNew(updatedProject){\n    const newTag = {\n      name: this.state.name,\n      description: this.state.description,\n      externalDocs: {\n        description: this.state.externalDocsDesc,\n        url: this.state.externalDocsUrl\n      }\n    }\n    updatedProject.tags.push(newTag)\n  }\n\n  handleDelete(tagName){\n    const newProject = this.props.project\n    const filteredTags = newProject.tags.filter(tag => tag.name !== tagName)\n    newProject.tags = filteredTags\n    this.props.onChange(newProject)\n    this.resetState()\n  }\n\n  handleOnEdit(selectedTagName){\n    const foundTag = this.props.project.tags.find(tag => tag.name === selectedTagName)\n    const externalDocs = foundTag.externalDocs\n    this.setState({\n      name: foundTag.name,\n      description: foundTag.description,\n      externalDocsDesc : externalDocs === undefined ? '' : externalDocs.description,\n      externalDocsUrl: externalDocs === undefined ? '' : externalDocs.url,\n      isEditing: true\n    })\n  }\n\n  render(){\n    const tagList = this.props.project.tags.map((tag,index) =>\n      <button key={index} onClick={()=>this.handleOnEdit(tag.name)} type=\"button\" className=\"btn btn-outline-primary mb-2\">{tag.name}</button>\n    )\n\n    const deleteTagBtn = this.state.isEditing === true ?\n    <button type=\"button\" onClick={()=>this.handleDelete(this.state.name)} className=\"btn btn-dark clear-btn\">DELETE</button> : '';\n\n    return(\n      <div>\n        <h4 className=\"page-title\">Add New Tag</h4>\n        <h5>Basic Information</h5>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <label htmlFor=\"tagName\" className=\"form-label\">Name</label>\n              <input required disabled={this.state.isEditing === true} name=\"name\" onChange={this.handleChange} value={this.state.name} id=\"tagName\" className=\"form-control\" placeholder=\"Ex: pet\" />\n            </div>\n            <div className=\"col-8\">\n              <label htmlFor=\"tagDescription\" className=\"form-label\">Description</label>\n              <input name=\"description\" onChange={this.handleChange} value={this.state.description} id=\"tagDescription\" className=\"form-control\" placeholder=\"Ex: Everything about your Pets\" />\n            </div>\n          </div>\n          <br/>\n          <h5>External Docs</h5>\n          <div className=\"row\">\n            <div className=\"col-5\">\n              <label htmlFor=\"extDocsDesc\" className=\"form-label\">Description</label>\n              <input name=\"externalDocsDesc\" onChange={this.handleChange} value={this.state.externalDocsDesc} id=\"extDocsDesc\" className=\"form-control\" placeholder=\"Ex: Find out more\" />\n            </div>\n            <div className=\"col-7\">\n              <label htmlFor=\"externalDocsUrl\" className=\"form-label\">URL</label>\n              <input type=\"url\" name=\"externalDocsUrl\" onChange={this.handleChange} value={this.state.externalDocsUrl} id=\"externalDocsUrl\" className=\"form-control\" placeholder=\"Ex: http://swagger.io\" />\n            </div>\n          </div>\n          <br/>\n          <div align=\"center\">\n            {deleteTagBtn}\n            <button type=\"reset\" onClick={this.resetState} className=\"btn btn-dark clear-btn\">CLEAR</button>\n            <button type=\"submit\" className=\"btn btn-dark\">\n            {this.state.isEditing === true ? 'SAVE TAG' : 'ADD TAG' }\n            </button>\n          </div>\n        </form>\n        <h5>Existing Tags</h5>\n        <div className=\"existing-tags\">\n          {tagList}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Tags;\n","import React from 'react'\n\nconst initialState = {\n  description: '',\n  url: '',\n  variables: [],\n  isEditing: false\n}\n\nclass ServerInfo extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = initialState\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.resetState = this.resetState.bind(this)\n\n    this.handleAddNewVariableRow = this.handleAddNewVariableRow.bind(this)\n    this.handleRemoveRow = this.handleRemoveRow.bind(this)\n    this.handleVariableChange = this.handleVariableChange.bind(this)\n    this.addNewServerVariable = this.addNewServerVariable.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n\n  }\n\n  handleChange(event){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName] : fieldValue\n    })\n  }\n\n  handleOnEdit(index){\n    const foundServer = this.props.project.servers[index]\n    this.setState({\n      description: foundServer.description,\n      url: foundServer.url,\n      variables: this.variablesToUI(foundServer.variables),\n      isEditing: true\n    })\n  }\n\n  variablesToUI(inMemoryRepOfVars){\n    const variables = []\n    if(inMemoryRepOfVars === undefined){\n      return variables\n    }\n    const keys = Object.keys(inMemoryRepOfVars)\n    keys.forEach((item, i) => {\n      const serverVar = inMemoryRepOfVars[item]\n      const newVar = {\n        name: item,\n        default: serverVar.default,\n        type: serverVar.enum === undefined ? 'text' : 'enum'\n      }\n      if(serverVar.enum !== undefined){\n        newVar['enumValues'] = serverVar.enum.join(',')\n      }\n      variables.push(newVar)\n    });\n    return variables;\n  }\n\n  handleVariableChange(event,index){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    const newVariables = this.state.variables\n    newVariables[index][fieldName] = fieldValue\n    this.setState({\n      variables: newVariables\n    })\n  }\n\n  resetState(){\n    initialState.variables = []\n    this.setState(initialState)\n  }\n\n  handleSubmit(event){\n    event.preventDefault()\n    const foundProject = this.props.project\n    if(this.state.isEditing === true){\n      this.updateExisting(foundProject)\n    } else {\n      this.createNew(foundProject)\n    }\n    this.props.onChange(foundProject)\n    this.resetState()\n  }\n\n  createNew(project){\n    const newServer = {\n      description: this.state.description,\n      url: this.state.url,\n      variables: {}\n    }\n    this.state.variables.forEach(currVar => {\n      this.addNewServerVariable(newServer, currVar)\n    })\n    project.servers.push(newServer)\n  }\n\n  updateExisting(project){\n    const foundServer = project.servers.find(item => item.description === this.state.description)\n    foundServer.url = this.state.url\n    foundServer.variables = {}\n    this.state.variables.forEach(currVar => {\n      this.addNewServerVariable(foundServer, currVar)\n    })\n  }\n\n  addNewServerVariable(server,serverVariable){\n    const serverVarDetails = {}\n    server.variables[serverVariable.name] = serverVarDetails\n    serverVarDetails['default'] = serverVariable.default\n    if(serverVariable.type === 'enum'){\n        serverVarDetails['enum'] = serverVariable.enumValues.split(',')\n    }\n  }\n\n  handleAddNewVariableRow(){\n    const existingVars = this.state.variables\n    const defaultServerVar = {}\n    existingVars.push(defaultServerVar)\n    this.setState({\n      variables: existingVars\n    })\n  }\n\n  handleRemoveRow(toRemoveIndex){\n    const filteredVars = this.state.variables.filter((val,index)=> index !== toRemoveIndex)\n    this.setState({\n      variables: filteredVars\n    })\n  }\n\n  render(){\n    var enumValueHeader\n    const uriVariables = this.state.variables.map((uriVar,index) =>{\n      if(uriVar.type === 'enum'){\n        enumValueHeader = <th>Values</th>\n      }\n\n      return <tr key={index}>\n        <td>\n          <input key={index} value={uriVar.name} onChange={(e)=>this.handleVariableChange(e,index)} required name=\"name\" className=\"form-control\" placeholder=\"Ex: Username\" />\n        </td>\n        <td style={{width:'25%'}}>\n          <select key={index} value={uriVar.type} onChange={(e)=>this.handleVariableChange(e,index)} name=\"type\" required className=\"form-select\" aria-label=\"Server variable type\">\n            <option>Select</option>\n            <option value=\"text\">Text</option>\n            <option value=\"enum\">Enum</option>\n          </select>\n        </td>\n        {uriVar.type === 'enum' &&\n          <td>\n            <input key={index} value={uriVar.enumValues} onChange={(e)=>this.handleVariableChange(e,index)} name=\"enumValues\" id=\"enumValuesInput\" className=\"form-control\" placeholder=\"8081,8082\" />\n          </td>\n        }\n        <td>\n          <input key={index} value={uriVar.default} onChange={(e)=>this.handleVariableChange(e,index)} name=\"default\" className=\"form-control\" placeholder=\"Ex: demo\" />\n        </td>\n        <td>\n          <i style={{marginLeft:'1%'}} onClick={()=>this.handleRemoveRow(index)} className=\"bi bi-dash-circle-fill text-danger\"></i>\n        </td>\n      </tr>\n\n    })\n\n    const existingServers = this.props.project.servers.map((existingServer,index) =>\n      <button onClick={()=>this.handleOnEdit(index)} type=\"button\" className=\"btn btn-outline-primary\">{existingServer.description}</button>\n    )\n\n    return(\n      <div>\n        <h4 className=\"page-title\">Add Server</h4>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-5\">\n              <label htmlFor=\"serverDesc\" className=\"form-label\">Description</label>\n              <input value={this.state.description} required id=\"serverDesc\" name=\"description\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Ex: Developent\" />\n            </div>\n            <div className=\"col-7\">\n              <label htmlFor=\"serverUrl\" className=\"form-label\">URL</label>\n              <input value={this.state.url} required id=\"serverUrl\" name=\"url\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Ex: http://dev.swagger.io\" />\n            </div>\n          </div>\n          <br/>\n\n          <h5>URL Variables<i style={{marginLeft:'1%'}} onClick={this.handleAddNewVariableRow} className=\"bi bi-plus-circle-fill tiny-font\">&nbsp;Add</i></h5>\n\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                {enumValueHeader}\n                <th>Default</th>\n              </tr>\n            </thead>\n            <tbody>\n              {uriVariables}\n            </tbody>\n          </table>\n          <br/>\n          <div align=\"center\">\n            {this.state.isEditing === true ?\n              <button type=\"submit\" className=\"btn btn-dark\">SAVE</button> :\n                <button type=\"submit\" className=\"btn btn-dark\">ADD</button>\n            }\n          </div>\n        </form>\n        <br/>\n        <h5>Existing Servers</h5>\n        <div className=\"existing-tags\">\n          {existingServers}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default ServerInfo\n","import React from 'react'\n\nclass CustomTooltip extends React.Component {\n\n  render() {\n    return (\n      <span className=\"bi bi-info-circle-fill tt-container\">\n        <div className=\"t-text\">{this.props.text}</div>\n      </span>\n    )\n  }\n\n}\n\nexport default CustomTooltip\n","import React from 'react'\nimport './api-resource.css'\nimport CustomTooltip from './CustomTooltip'\n\nconst initialState = {\n  method: '',\n  url: '',\n  operationId: '',\n  summary: '',\n  description: '',\n  tag: '',\n  requestBody: '',\n  responseBody: '',\n  pathParam: '',\n  isEditing: false\n}\n\nclass ApiResource extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = initialState\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.resetState = this.resetState.bind(this)\n    this.addPathMethod = this.addPathMethod.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n    this.findComponentReferenceId = this.findComponentReferenceId.bind(this)\n    this.findPathBy = this.findPathBy.bind(this)\n    this.populatePathToRender = this.populatePathToRender.bind(this)\n    this.updatePathMethod = this.updatePathMethod.bind(this)\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const fieldName = target.name;\n    const fieldValue = target.value;\n    this.setState({\n      [fieldName]: fieldValue\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const newProject = this.props.project\n    if (this.state.isEditing === true) {\n      this.updatePathMethod(newProject)\n    } else {\n      this.addPathMethod(newProject)\n    }\n\n    this.props.onChange(newProject)\n    this.resetState()\n  }\n\n  addPathMethod(project) {\n    if (project.paths[this.state.url] === undefined) {\n      project.paths[this.state.url] = {}\n    }\n    project.paths[this.state.url][this.state.method] = {\n      operationId: this.state.operationId,\n      summary: this.state.summary,\n      description: this.state.description,\n      tags: [this.state.tag]\n    }\n\n    this.addRequestBody(project);\n    this.addResponseBody(project);\n    this.addPathParam(project);\n  }\n\n  updatePathMethod(project) {\n    const foundPath = this.getPathObjectFromProject(project);\n    if (foundPath !== undefined) {\n      foundPath.operationId = this.state.operationId;\n      foundPath.summary = this.state.summary;\n      foundPath.description = this.state.description;\n      foundPath.tags = [this.state.tag]\n\n      this.addRequestBody(project);\n      this.addResponseBody(project);\n      this.addPathParam(project);\n    }\n  }\n\n  findPathBy(summary) {\n    const projectPaths = this.props.project.paths;\n    const pathUrls = Object.keys(projectPaths);\n    for (var pathUrl of pathUrls) {\n      const pathMethods = Object.keys(projectPaths[pathUrl]);\n      for (var methodName of pathMethods) {\n        const currentPath = projectPaths[pathUrl][methodName]\n        const currentPathSummary = currentPath.summary;\n        if (currentPathSummary === summary) {\n          this.populatePathToRender(pathUrl, methodName, currentPath)\n          break;\n        }\n      }\n    }\n  }\n\n  getSuccessResponseBody(currentPath) {\n    return currentPath.responses === undefined ? \"\" : currentPath.responses[200];\n  }\n\n  populatePathToRender(pathUrl, methodName, currentPath) {\n    const requestBodyId = this.findComponentReferenceId(currentPath.requestBody);\n    const responseBodyLink = this.getSuccessResponseBody(currentPath);\n    const responseBodyId = this.findComponentReferenceId(responseBodyLink);\n    this.setState({\n      method: methodName,\n      url: pathUrl,\n      operationId: currentPath.operationId,\n      summary: currentPath.summary,\n      description: currentPath.description,\n      tag: currentPath.tags[0],\n      requestBody: requestBodyId,\n      responseBody: responseBodyId,\n      pathParam: \"\",\n      isEditing: true\n    })\n  }\n\n  handleOnEdit(pathSummary) {\n    this.findPathBy(pathSummary);\n  }\n\n  findPathParamIds(pathParams) {\n    const foundParams = [];\n    for (var paramLink of pathParams) {\n      foundParams.push(\n        this.findComponentReferenceId(paramLink)\n      )\n    }\n    return foundParams;\n  }\n\n  findComponentReferenceId(refLink) {\n    if (this.isNotEmpty(refLink)) {\n      const fullLink = refLink['$ref'];\n      return fullLink.split('/')[3];\n    }\n    return \"\";\n  }\n\n  addRequestBody(project) {\n    if (this.isNotEmpty(this.state.requestBody) && this.isSelected(this.state.requestBody)) {\n      this.getPathObjectFromProject(project).requestBody = {\n        $ref: `#/components/requestBodies/${this.state.requestBody}`\n      }\n    }\n  }\n\n  isSelected(value) {\n    return value !== \"Select\";\n  }\n\n  addResponseBody(project) {\n    if (this.isNotEmpty(this.state.responseBody) && this.isSelected(this.state.responseBody)) {\n      this.getPathObjectFromProject(project).responses = {\n        '200': {\n          $ref: `#/components/responses/${this.state.responseBody}`\n        }\n      }\n    }\n  }\n\n  getPathObjectFromProject(project) {\n    return project.paths[this.state.url][this.state.method];\n  }\n\n  isNotEmpty(value) {\n    return value !== undefined && value !== \"\";\n  }\n\n  addPathParam(project) {\n    if (this.isNotEmpty(this.state.pathParam)) {\n      this.getPathObjectFromProject(project).parameters = []\n      this.getPathObjectFromProject(project).parameters.push({\n        $ref: `#/components/parameters/${this.state.pathParam}`\n      })\n    }\n  }\n\n  resetState() {\n    this.setState(initialState)\n  }\n\n  render() {\n    const components = this.props.project.components\n    const existingTags = this.props.project.tags\n    const tagsList = existingTags === undefined ? [] : existingTags.map(tag =>\n      <option key={tag.name} value={tag.name}>{tag.name}</option>\n    )\n    const requestBodies = this.props.project.components.requestBodies\n    const localRequestBodies = []\n    for (var item in requestBodies) {\n      localRequestBodies.push(item)\n    }\n    const requestBodiesDisplay = localRequestBodies.map((item, index) =>\n      <option key={item + '-' + index} value={item}>{item}</option>\n    )\n\n    const localResponseBodies = []\n    for (var bodyName in components.responses) {\n      localResponseBodies.push(bodyName)\n    }\n\n    const responseBodiesDisplay = localResponseBodies.map((item, index) =>\n      <option key={index} value={item}>{item}</option>\n    )\n\n    const localParams = []\n    for (var param in components.parameters) {\n      localParams.push(param)\n    }\n\n    const pathParamsDisplay = localParams.map((item, index) =>\n      <option key={index} value={item}>{item}</option>\n    )\n\n    const existingPaths = [];\n    const projectPaths = this.props.project.paths;\n    const pathUrls = Object.keys(projectPaths);\n    for (var pathUrl of pathUrls) {\n      const pathMethods = Object.keys(projectPaths[pathUrl]);\n      for (var methodName of pathMethods) {\n        // const clubbedPath = `${pathUrl} - ${methodName}`;\n        const pathDetails = projectPaths[pathUrl][methodName].summary;\n        existingPaths.push(\n          <button key={pathDetails} onClick={() => this.handleOnEdit(pathDetails)} type=\"button\" className=\"btn btn-outline-primary\">{pathDetails}</button>\n        );\n      }\n    }\n\n    return (\n      <div>\n        <h4 className=\"page-title\">Add an API Resource</h4>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"row mb-3\">\n            <div className=\"col-5\">\n              <label htmlFor=\"selectHttpMethod\" className=\"form-label\">HttpMethod</label>\n              <select required name=\"method\" value={this.state.method} onChange={this.handleChange} id=\"selectHttpMethod\" className=\"form-select\" aria-label=\"Server variable type\">\n                <option>Select</option>\n                <option value=\"post\">POST</option>\n                <option value=\"get\">GET</option>\n                <option value=\"put\">PUT</option>\n                <option value=\"delete\">DELETE</option>\n              </select>\n            </div>\n            <div className=\"col-5 offset-2\">\n              <label htmlFor=\"selectPetTag\" className=\"form-label\">\n                Attach a Tag\n              </label>\n              <select required name=\"tag\" value={this.state.tag} onChange={this.handleChange} id=\"selectPetTag\" className=\"form-select\" aria-label=\"Server variable type\">\n                <option>Select</option>\n                {tagsList}\n              </select>\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"apiUrl\" className=\"form-label\">\n              Endpoint URL\n            </label>\n            <CustomTooltip text=\"The value should follow rest api design guidelines\" />\n            <input required name=\"url\" value={this.state.url} onChange={this.handleChange} id=\"apiUrl\" className=\"form-control\" placeholder=\"Ex: /pet\" />\n          </div>\n          <div className=\"row mb-2\">\n            <div className=\"form-floating col-8 row-margin\">\n              <input name=\"summary\" value={this.state.summary} onChange={this.handleChange} id=\"apiSummary\" className=\"form-control\" placeholder=\"Ex: Add a new pet\" />\n              <label htmlFor=\"apiSummary\" className=\"form-label custom-floating-label\">Summary</label>\n            </div>\n            <div className=\"form-floating col-4 row-margin\">\n              <input required name=\"operationId\" value={this.state.operationId} onChange={this.handleChange} id=\"operationId\" className=\"form-control\" placeholder=\"Ex: addPet\" />\n              <label htmlFor=\"operationId\" className=\"form-label custom-floating-label\">OperationId</label>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <div className=\"form-floating col-8\">\n              <textarea name=\"description\" value={this.state.description} onChange={this.handleChange} className=\"form-control\" style={{ height: '80px' }} placeholder=\"Ex: This is a sample server Petstore server\" id=\"projectDescription\"></textarea>\n              <label htmlFor=\"projectDescription\" className=\"form-label custom-floating-label\">Description</label>\n            </div>\n            <div className=\"col-4\">\n              <label htmlFor=\"pathParam\" className=\"form-label\">Path Param</label>\n              <select name=\"pathParam\" value={this.state.pathParam} onChange={this.handleChange} id=\"pathParam\" className=\"form-select\" aria-label=\"Path Parameter\">\n                <option>Select</option>\n                {pathParamsDisplay}\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-5 offset-1 mb-2\">\n              <label htmlFor=\"selectTag\" className=\"form-label\">Request Body</label>\n              <select name=\"requestBody\" value={this.state.requestBody} onChange={this.handleChange} id=\"selectTag\" className=\"form-select\" aria-label=\"Server variable type\">\n                <option>Select</option>\n                {requestBodiesDisplay}\n              </select>\n            </div>\n            <div className=\"col-5 mb-2\">\n              <label htmlFor=\"selectResponseBody\" className=\"form-label\">Response Body</label>\n              <select required name=\"responseBody\" value={this.state.responseBody} onChange={this.handleChange} id=\"selectResponseBody\" className=\"form-select\" aria-label=\"Response Body\">\n                <option>Select</option>\n                {responseBodiesDisplay}\n              </select>\n            </div>\n          </div>\n          <div align=\"center\">\n            {this.state.isEditing ?\n              <button type=\"submit\" className=\"btn btn-dark\">SAVE</button> :\n              <button type=\"submit\" className=\"btn btn-dark\">ADD</button>\n            }\n          </div>\n        </form>\n\n        <h5>Existing Paths</h5>\n        <div className=\"existing mb-3\">\n          {existingPaths}\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default ApiResource\n","import React from 'react';\n\nclass RequestBodies extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      description: '',\n      contentType: '',\n      schemaName: '',\n      isEditing: false\n    }\n\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n    this.resetState = this.resetState.bind(this)\n\n  }\n\n  handleOnChange(event) {\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName]: fieldValue\n    })\n  }\n\n  handleOnSubmit(event) {\n    event.preventDefault()\n    const updatedProject = this.props.project\n    const requestBodies = updatedProject.components.requestBodies\n    const foundRequestBody = requestBodies[this.state.name]\n    if (foundRequestBody === undefined) {\n      this.createNew(requestBodies, updatedProject)\n    } else {\n      // TODO Need to work on this update scenario\n      this.updateExisting(foundRequestBody)\n    }\n    this.props.onChange(updatedProject)\n    this.resetState()\n  }\n\n  createNew(requestBodies, updatedProject) {\n    requestBodies[this.state.name] = {\n      description: this.state.description,\n      content: {}\n    }\n    requestBodies[this.state.name].content[this.state.contentType] = {\n      schema: {\n        $ref: `#/components/schemas/${this.state.schemaName}`\n      }\n    }\n  }\n\n  handleOnEdit(reqBodyName) {\n    const bodies = this.props.project.components.requestBodies\n    const foundRequestBody = bodies[reqBodyName]\n    const contentType = Object.keys(foundRequestBody.content)[0]\n    const schemaName = foundRequestBody.content[contentType].schema['$ref'].split('#/components/schemas/')[1]\n    this.setState({\n      name: reqBodyName,\n      description: foundRequestBody.description,\n      contentType: contentType,\n      schemaName: schemaName,\n      isEditing: true\n    })\n  }\n\n  resetState() {\n    this.setState({\n      name: '',\n      description: '',\n      contentType: '',\n      schemaName: ''\n    })\n  }\n\n  render() {\n    const components = this.props.project.components\n    const projectSchemas = components.schemas\n    const localSchemas = []\n    for (var schemaName in projectSchemas) {\n      localSchemas.push(schemaName)\n    }\n    const schemaDisplayList = localSchemas.map((item, index) =>\n      <option key={index} value={item}>{item}</option>\n    )\n\n    const localRequestBodies = []\n    for (var item in components.requestBodies) {\n      localRequestBodies.push(item)\n    }\n    const displayReqBodies = localRequestBodies.map((item, index) =>\n      <button key={index} onClick={() => this.handleOnEdit(item)} type=\"button\" className=\"btn btn-outline-primary\">{item}</button>\n    )\n\n    return (\n      <div>\n        <h4 className=\"page-title\">Define Request Bodies</h4>\n        <form onSubmit={this.handleOnSubmit}>\n          <div className=\"row mb-2\">\n            <div className=\"form-floating col-4\">\n              <input name=\"name\" value={this.state.name} onChange={this.handleOnChange} id=\"tagName\" className=\"form-control\" placeholder=\"Ex: Pet\" />\n              <label htmlFor=\"tagName\" className=\"custom-floating-label\">Name</label>\n            </div>\n            <div className=\"form-floating col-8\">\n              <input name=\"description\" value={this.state.description} onChange={this.handleOnChange} id=\"tagDescription\" className=\"form-control\" placeholder=\"Ex: Everything about your Pets\" />\n              <label htmlFor=\"tagDescription\" className=\"custom-floating-label\">Description</label>\n            </div>\n          </div>\n          <div className=\"row mb-3\">\n            <div className=\"col-7\">\n              <label htmlFor=\"selectTag\" className=\"form-label\">ContentType</label>\n              <select name=\"contentType\" value={this.state.contentType} onChange={this.handleOnChange} id=\"selectTag\" className=\"form-select\" aria-label=\"Server variable type\">\n                <option>Select</option>\n                <option value=\"application/json\">application/json</option>\n                <option value=\"text/plain; charset=utf-8\">text/plain; charset=utf-8</option>\n                <option value=\"application/xml\">application/xml</option>\n              </select>\n            </div>\n            <div className=\"col-5\">\n              <label htmlFor=\"selectTag\" className=\"form-label\">Schema Model</label>\n              <select name=\"schemaName\" value={this.state.schemaName} onChange={this.handleOnChange} id=\"selectTag\" className=\"form-select\" aria-label=\"Server variable type\">\n                <option>Select</option>\n                {schemaDisplayList}\n              </select>\n            </div>\n          </div>\n          <div align=\"center\">\n            <button type=\"submit\" className=\"btn btn-dark\">SAVE</button>\n          </div>\n        </form>\n\n        <h5>Existing Request Bodies</h5>\n        <div className=\"existing mb-3\">\n          {displayReqBodies}\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default RequestBodies;\n","import React from 'react'\nimport './modal-window.css'\n\nconst typeToFormatMapping = {\n    'integer' : ['int32', 'int64'],\n    'number' : ['float', 'double'],\n    'string' : ['byte', 'binary', 'date', 'date-time', 'password']\n}\n\nclass ModalWindow extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      format : '',\n      readOnly : false\n    }\n    this.invokeTrigger = this.invokeTrigger.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnSave = this.handleOnSave.bind(this)\n    this.resetState = this.resetState.bind(this)\n  }\n\n  invokeTrigger(){\n    document.getElementById('modalTrigger').click()\n  }\n\n  handleOnChange(event){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName] : fieldValue\n    })\n  }\n\n  handleOnSave(event){\n    event.preventDefault()\n    this.props.onSave({\n      'index' : this.props.data.index,\n      'name' : this.props.data.name,\n      'format' : this.state.format,\n      'readOnly' : this.state.readOnly === 'true'\n    })\n    this.resetState()\n  }\n\n  resetState(){\n    this.setState({\n      'format' : '',\n      'readOnly' : false\n    })\n  }\n\n  render(){\n    const selectedPropertyType = this.props.data.type\n    const formats = typeToFormatMapping[selectedPropertyType] === undefined ? [] : typeToFormatMapping[selectedPropertyType]\n    const formatOptions = formats.map((format,index)=>\n      <option key={index} value={format}>{format}</option>\n    )\n\n    return(\n      <div>\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">{'Configuring Property : '+this.props.data.name}</h5>\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <form onSubmit={this.handleOnSave}>\n                <div className=\"modal-body\">\n                    <div className=\"row\">\n                      <div className=\"col-4\">\n                        <label htmlFor=\"fieldFormat\" className=\"form-label\">Format</label>\n                        <select name=\"format\" value={this.props.data.format} onChange={this.handleOnChange} id=\"fieldFormat\" className=\"form-select\" aria-label=\"Format\">\n                          <option>Select</option>\n                          {formatOptions}\n                        </select>\n                      </div>\n                      <div className=\"col-4 form-check-inline\">\n                        <label className=\"form-check-label\" htmlFor=\"readOnly\">ReadOnly</label><br/>\n                        <input className=\"form-check-input checkradio-middle\" onChange={this.handleOnChange} checked={this.state.readOnly} value=\"true\" name=\"readOnly\" type=\"radio\" id=\"readOnly\"/>\n                      </div>\n                      <div className=\"col-3 form-check-inline\">\n                        <label className=\"form-check-label\" htmlFor=\"writeOnly\">WriteOnly</label><br/>\n                        <input className=\"form-check-input checkradio-middle\" onChange={this.handleOnChange} checked={!this.state.readOnly} value=\"false\" name=\"readOnly\" type=\"radio\" id=\"writeOnly\"/>\n                      </div>\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"clear\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n                  <button type=\"submit\" data-bs-dismiss=\"modal\" className=\"btn btn-primary\">SAVE</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default ModalWindow\n","import React from 'react';\nimport ModalWindow from './ModalWindow'\nimport './model-builder.css'\n\nconst initialState = {\n  name : '',\n  type : '',\n  editing: false,\n  modalData : {\n    name: ''\n  },\n  existingProperties : []\n}\n\nclass ModelBuilder extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = initialState\n\n    this.handleOpenModal = this.handleOpenModal.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnExistingPropertyChange = this.handleOnExistingPropertyChange.bind(this)\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\n    this.resetState = this.resetState.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n    this.handleAddNewPropertyRow = this.handleAddNewPropertyRow.bind(this)\n    this.handleOnModalDataSave = this.handleOnModalDataSave.bind(this)\n  }\n\n  handleOpenModal(itemIndex,itemName){\n    const foundProp = this.state.existingProperties[itemIndex]\n    this.setState({\n      modalData: {\n        index: itemIndex,\n        name: itemName,\n        type: foundProp.type,\n        readOnly: foundProp.readOnly\n      }\n    })\n  }\n\n  handleOnModalDataSave(savedModalData){\n    const existingProps = this.state.existingProperties\n    const foundProperty = existingProps[savedModalData.index]\n    foundProperty.format = savedModalData.format\n    foundProperty.readOnly = savedModalData.readOnly\n    this.setState({\n      existingProperties : existingProps\n    })\n  }\n\n  handleOnEdit(modelName){\n    const schemas = this.props.project.components.schemas\n    const foundSchema = schemas[modelName]\n    this.toState(modelName,foundSchema)\n  }\n\n  toState(modelName,schema){\n    this.setState({\n      name: modelName,\n      type: schema.type,\n      editing: true,\n      existingProperties : this.toModelStateProp(schema.required,schema.properties)\n    })\n  }\n\n  toModelStateProp(requiredProps,schemaProps){\n    const properties = []\n    for(var prop in schemaProps){\n      const details = schemaProps[prop]\n      properties.push({\n        'name' : prop,\n        'type' : details.type,\n        'example' : details.example,\n        'required' : requiredProps.indexOf(prop) !== -1,\n        'format' : details.format,\n        'readOnly' : details.readOnly\n      })\n    }\n    return properties\n  }\n\n  handleOnSubmit(event){\n    event.preventDefault()\n    const updatedProject = this.props.project\n    const schemas = updatedProject.components.schemas\n    const foundModel = schemas[this.state.name]\n    if(foundModel === undefined){\n      this.createNewModel(schemas)\n    } else {\n      this.updateExistingModel(foundModel)\n    }\n    this.props.onChange(updatedProject)\n    this.resetState()\n  }\n\n  createNewModel(schemas){\n    const modelName = this.state.name\n    const requiredProps = this.state.existingProperties.filter(it => it.required === true).map(it => it.name)\n    schemas[modelName] = {\n      'type' : this.state.type,\n      'properties' : {},\n      'required' : requiredProps\n    }\n    this.state.existingProperties.forEach((item, index) => {\n      schemas[modelName].properties[item.name] = {\n        'type' : item.type,\n        'format': item.format,\n        'example' : item.example,\n        'readOnly' : item.readOnly,\n        'required' : item.required\n      }\n    });\n\n  }\n\n  updateExistingModel(foundModel){\n    foundModel.type = this.state.type\n    foundModel.properties = {}\n    const requiredProps = this.state.existingProperties.filter(it => it.required === true).map(it => it.name)\n    foundModel.required = requiredProps\n    this.state.existingProperties.forEach((item, index) => {\n      foundModel.properties[item.name] = {\n        'type' : item.type,\n        'format': item.format,\n        'example' : item.example,\n        'readOnly' : item.readOnly,\n        'required' : item.required\n      }\n    });\n  }\n\n  handleOnChange(event){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName] : fieldValue\n    })\n  }\n\n  handleOnExistingPropertyChange(event,index){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.type === 'checkbox' ? target.checked : target.value\n    const properties = this.state.existingProperties\n    const propertyFound = properties[index]\n    propertyFound[fieldName] = fieldValue\n    this.setState({\n      existingProperties : properties\n    })\n  }\n\n  handleAddNewPropertyRow(){\n    const existingProperties = this.state.existingProperties\n    existingProperties.push({\n      name: '',\n      type: '',\n      example: '',\n      required: false,\n      format: '',\n      readOnly: false\n    })\n    this.setState({\n      existingProperties : existingProperties\n    })\n  }\n\n  resetState(){\n    initialState.existingProperties = []\n    this.setState(initialState)\n  }\n\n  render(){\n    var models = []\n    const schemas = this.props.project.components.schemas\n    for(var modelName in schemas){\n      models.push(modelName)\n    }\n    const existingModels = models.map((item,index) =>\n      <button key={index} onClick={()=>this.handleOnEdit(item)} type=\"button\" className=\"btn btn-outline-primary\">{item}</button>\n    )\n\n    const existingModelProperties = this.state.existingProperties.map((item,index) =>\n      <tr key={index}>\n        <td width=\"10%\">\n          <input name=\"required\" checked={item.required} onChange={(e)=>this.handleOnExistingPropertyChange(e,index)} className=\"form-check-input checkbox-middle\" type=\"checkbox\" id=\"isRequired\"/>\n        </td>\n        <td width=\"30%\">\n          <input name=\"name\" value={item.name} onChange={(e)=>this.handleOnExistingPropertyChange(e,index)} id=\"fieldName\" className=\"form-control form-control\" placeholder=\"name\" />\n        </td>\n        <td width=\"30%\">\n          <select name=\"type\" value={item.type} onChange={(e)=>this.handleOnExistingPropertyChange(e,index)} id=\"fieldType\" className=\"form-select\" aria-label=\"Field Type\">\n            <option>Select</option>\n            <option value=\"string\">String</option>\n            <option value=\"integer\">Integer</option>\n            <option value=\"date\">Date</option>\n          </select>\n        </td>\n        <td width=\"30%\">\n          <input name=\"example\" value={item.example} onChange={(e)=>this.handleOnExistingPropertyChange(e,index)} id=\"fieldExample\" className=\"form-control form-control\" placeholder=\"Tommy\" />\n        </td>\n        <td width=\"3%\">\n          <i key={index} onClick={() => this.handleOpenModal(index,item.name)}\n             data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"\n             className=\"bi bi-gear-fill\"></i>\n        </td>\n      </tr>\n    )\n\n    return(\n      <div>\n        <h4 className=\"page-title\">Create Domain Model</h4>\n\n        <form onSubmit={this.handleOnSubmit}>\n\n          <div className=\"row mb-3\">\n            <div className=\"col-8\">\n              <label htmlFor=\"tagName\" className=\"form-label\">Name</label>\n              <input name=\"name\" value={this.state.name} onChange={this.handleOnChange} id=\"tagName\" className=\"form-control\" placeholder=\"Ex: Pet\" />\n            </div>\n            <div className=\"col-3\">\n              <label htmlFor=\"modelType\" className=\"form-label\">Type</label>\n              <select name=\"type\" value={this.state.type} onChange={this.handleOnChange} id=\"modelType\" className=\"form-select\" aria-label=\"Domain Model Type\">\n                <option>Select</option>\n                <option value=\"object\">Object</option>\n                <option value=\"array\">Array</option>\n                <option value=\"string\">String</option>\n                <option value=\"number\">Number</option>\n                <option value=\"integer\">Integer</option>\n                <option value=\"boolean\">Boolean</option>\n              </select>\n            </div>\n          </div>\n\n          <h5>\n            Properties\n            <i style={{marginLeft:'1%'}} onClick={this.handleAddNewPropertyRow} className=\"bi bi-plus-circle-fill tiny-font\">&nbsp;Add</i>\n          </h5>\n          <div>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Req</th>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Example</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {existingModelProperties}\n              </tbody>\n            </table>\n          </div>\n\n          <div align=\"center\">\n            <button type=\"clear\" className=\"btn btn-dark button-margin-right\">CLEAR</button>\n            {this.state.editing === true ?\n            <button type=\"submit\" className=\"btn btn-dark\">SAVE</button>:\n            <button type=\"submit\" className=\"btn btn-dark\">ADD</button>}\n          </div>\n\n        </form>\n\n        <h5>Existing Models</h5>\n        <div className=\"existing mb-3\">\n          {existingModels}\n        </div>\n\n        <ModalWindow data={this.state.modalData} onSave={this.handleOnModalDataSave}/>\n\n      </div>\n    )\n  }\n\n}\n\n\nexport default ModelBuilder;\n","class Project {\n\n  constructor() {\n    this.openapi = '3.0.2'\n    this.info = {}\n    this.paths = {}\n    this.tags = []\n    this.servers = []\n    this.components = {\n      schemas: {},\n      requestBodies: {},\n      responses: {},\n      parameters: []\n    }\n\n  }\n\n}\n\nclass DataConverter {\n\n  toSpec(project) {\n    return project;\n  }\n\n}\n\nexport { Project, DataConverter }\n","import React from 'react'\n\nclass ApiResponse extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      name: '',\n      description: '',\n      contentType: '',\n      schemaName: '',\n      schemaType: ''\n    }\n\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n    this.resetState = this.resetState.bind(this)\n  }\n\n  handleOnChange(event){\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName] : fieldValue\n    })\n  }\n\n  handleOnSubmit(event){\n    event.preventDefault()\n    const project = this.props.project\n    const responses = project.components.responses\n    const foundResponse = responses[this.state.name]\n    if(foundResponse === undefined){\n      this.createNew(responses)\n    } else {\n      this.updateExisting(foundResponse)\n    }\n    this.props.onChange(project)\n    this.resetState()\n  }\n\n  createNew(responses){\n    responses[this.state.name] = {\n      description: this.state.description,\n      content: {}\n    }\n    responses[this.state.name].content[this.state.contentType] = {\n      schema: this.getSchemaObject()\n    }\n  }\n\n  updateExisting(foundResponse){\n    console.log(\"Updating...\");\n  }\n\n  getSchemaObject(){\n    var schemaObj = {\n      $ref: `#/components/schemas/${this.state.schemaName}`\n    }\n    if(this.state.schemaType === 'array'){\n      schemaObj = {\n        type: 'array',\n        items: {\n          $ref: `#/components/schemas/${this.state.schemaName}`\n        }\n      }\n    }\n    return schemaObj\n  }\n\n  handleOnEdit(responseName){\n    console.log(\"Editing... \");\n  }\n\n  resetState(){\n    this.setState({\n      name: '',\n      description: '',\n      contentType: '',\n      schemaName: '',\n      schemaType: ''\n    })\n  }\n\n  render(){\n    const components = this.props.project.components\n    const projectSchemas = components.schemas\n    const localSchemas = []\n    for(var schemaName in projectSchemas){\n      localSchemas.push(schemaName)\n    }\n    const schemaDisplayList = localSchemas.map((item,index) =>\n      <option key={index} value={item}>{item}</option>\n    )\n\n    const localResponses = []\n    for(var item in components.responses){\n      localResponses.push(item)\n    }\n    const displayResponses = localResponses.map((item,index)=>\n      <button key={index} onClick={()=>this.handleOnEdit(item)} type=\"button\" className=\"btn btn-outline-primary\">{item}</button>\n    )\n\n    return(\n      <div>\n        <h4 className=\"page-title\">Build API Response</h4>\n        <form onSubmit={this.handleOnSubmit}>\n          <div className=\"row mb-2\">\n            <div className=\"form-floating col-4\">\n              <input name=\"name\" value={this.state.name} onChange={this.handleOnChange} id=\"responseBodyName\" className=\"form-control\" placeholder=\"Ex: GetAllPets\" />\n              <label htmlFor=\"responseBodyName\" className=\"custom-floating-label\">Name</label>\n            </div>\n            <div className=\"form-floating col-8\">\n              <input name=\"description\" value={this.state.description} onChange={this.handleOnChange} id=\"responseBodyDescription\" className=\"form-control\" placeholder=\"Ex: Fetch All Pets\" />\n              <label htmlFor=\"responseBodyDescription\" className=\"custom-floating-label\">Description</label>\n            </div>\n          </div>\n          <div className=\"row mb-3\">\n            <div className=\"col-7\">\n              <label htmlFor=\"selectContentType\" className=\"form-label\">ContentType</label>\n              <select name=\"contentType\" value={this.state.contentType} onChange={this.handleOnChange} id=\"selectContentType\" className=\"form-select\" aria-label=\"Response Content Type\">\n                <option>Select</option>\n                <option value=\"application/json\">application/json</option>\n                <option value=\"text/plain; charset=utf-8\">text/plain; charset=utf-8</option>\n                <option value=\"application/xml\">application/xml</option>\n              </select>\n            </div>\n            <div className=\"col-5\">\n              <label htmlFor=\"schemaSelection\" className=\"form-label\">Schema</label>\n              <select name=\"schemaName\" value={this.state.schemaName} onChange={this.handleOnChange} id=\"schemaSelection\" className=\"form-select\" aria-label=\"Response Schema\">\n                <option>Select</option>\n                {schemaDisplayList}\n              </select>\n            </div>\n          </div>\n          <div className=\"row mb-3\">\n            <div className=\"col-5\">\n              <label htmlFor=\"schemaType\" className=\"form-label\">Schema Type</label>\n              <select name=\"schemaType\" value={this.state.schemaType} onChange={this.handleOnChange} id=\"schemaType\" className=\"form-select\" aria-label=\"Response Schema Type\">\n                <option>Select</option>\n                <option value=\"object\">Object</option>\n                <option value=\"array\">Array</option>\n              </select>\n            </div>\n          </div>\n          <div align=\"center\">\n            <button type=\"submit\" className=\"btn btn-dark\">SAVE</button>\n          </div>\n        </form>\n\n        <h5>Existing API Responses</h5>\n        <div className=\"existing mb-3\">\n          {displayResponses}\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default ApiResponse\n","import React from 'react'\nimport './parameters.css'\n\nclass Parameters extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      location: '',\n      description: '',\n      required: false,\n      deprecated: false,\n      allowedEmpty: false,\n      schemaType: '',\n      schemaFormat: '',\n      schemaEnum: '',\n      editing: false\n    }\n\n    this.resetState = this.resetState.bind(this)\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleOnEdit = this.handleOnEdit.bind(this)\n  }\n\n  handleOnChange(event) {\n    const target = event.target\n    const fieldName = target.name\n    const fieldValue = target.value\n    this.setState({\n      [fieldName]: fieldValue\n    })\n  }\n\n  handleOnSubmit(event) {\n    event.preventDefault()\n    const project = this.props.project\n    if (project.components.parameters === undefined) {\n      project.components.parameters = {}\n    }\n    const parameters = project.components.parameters\n    const foundParameters = parameters[this.state.name]\n    if (foundParameters === undefined) {\n      this.createNew(parameters)\n    } else {\n      this.updateExisting()\n    }\n    this.props.onChange(project)\n    this.resetState()\n  }\n\n  handleOnEdit(paramName) {\n    const foundParam = this.props.project.components.parameters[paramName]\n    this.setState({\n      editing: true,\n      name: foundParam.name,\n      location: foundParam.in,\n      description: foundParam.description,\n      required: foundParam.required,\n      deprecated: foundParam.deprecated,\n      allowedEmpty: foundParam.allowEmptyValue,\n      schemaType: foundParam.schema.type,\n      schemaFormat: foundParam.schema.format,\n      schemaEnum: foundParam.schema.enum,\n    })\n  }\n\n  createNew(parameters) {\n    parameters[this.state.name] = {\n      name: this.state.name,\n      in: this.state.location,\n      required: this.state.required,\n      deprecated: this.state.deprecated,\n      description: this.state.description,\n      schema: {\n        type: this.state.schemaType,\n        format: this.state.schemaFormat,\n        enum: this.getEnumValues()\n      }\n    }\n  }\n\n  getEnumValues() {\n    return this.state.schemaEnum === undefined || this.state.schemaEnum === \"\" ? [] : this.state.schemaEnum.split(',')\n  }\n\n  updateExisting() {\n\n  }\n\n  resetState() {\n    this.setState({\n      name: '',\n      location: '',\n      description: '',\n      required: false,\n      deprecated: false,\n      allowedEmpty: false,\n      schemaType: '',\n      schemaFormat: '',\n      schemaEnum: '',\n      editing: false\n    })\n  }\n\n  render() {\n    const projectParams = this.props.project.components.parameters\n    let existingParameters = ''\n    if (projectParams !== undefined) {\n      const params = Object.keys(projectParams)\n      existingParameters = params.map((param, index) =>\n        <button key={param + '-' + index} onClick={() => this.handleOnEdit(param)} type=\"button\" className=\"btn btn-outline-primary\">{param}</button>\n      )\n    }\n\n    return (\n      <div>\n        <h4 className=\"page-title\">Create Parameter</h4>\n\n        <form onSubmit={this.handleOnSubmit}>\n\n          <div className=\"row mb-3\">\n            <div id=\"paramPanel\" className=\"col-8\">\n              <h5 className=\"panel-title\">Param Definition</h5>\n              <div className=\"row mb-3\">\n                <div className=\"col-6\">\n                  <label htmlFor=\"paramLocation\" className=\"form-label\">Location</label>\n                  <select name=\"location\" value={this.state.location}\n                    onChange={this.handleOnChange} id=\"paramLocation\"\n                    className=\"form-select\" aria-label=\"Param Location\">\n                    <option>Select</option>\n                    <option value=\"path\">Path</option>\n                    <option value=\"query\">Query</option>\n                    <option value=\"header\">Header</option>\n                    <option value=\"cookie\">Cookie</option>\n                  </select>\n                </div>\n                <div className=\"col-6\">\n                  <label htmlFor=\"paramName\" className=\"form-label\">Name</label>\n                  <input value={this.state.name} onChange={this.handleOnChange} name=\"name\" id=\"paramName\" className=\"form-control\" placeholder=\"Ex: Id\" />\n                </div>\n              </div>\n              <div className=\"row mb-3\">\n                <div className=\"col-12\">\n                  <label htmlFor=\"paramDesc\" className=\"form-label\">Description</label>\n                  <input value={this.state.description} onChange={this.handleOnChange} name=\"description\" id=\"paramDesc\" className=\"form-control\" placeholder=\"Ex: Identifier of Pet\" />\n                </div>\n              </div>\n              <div className=\"row mb-3\">\n                <div className=\"col-3\">\n                  <label htmlFor=\"isRequired\" className=\"form-label\">Required</label><br />\n                  <input value={this.state.required} checked={this.state.required} onChange={this.handleOnChange} name=\"required\" className=\"form-check-input\" type=\"checkbox\" id=\"isRequired\" />\n                </div>\n                <div className=\"col-4\">\n                  <label htmlFor=\"isDeprecated\" className=\"form-label\">Deprecated</label><br />\n                  <input value={this.state.deprecated} checked={this.state.deprecated} onChange={this.handleOnChange} name=\"deprecated\" className=\"form-check-input\" type=\"checkbox\" id=\"isDeprecated\" />\n                </div>\n                <div className=\"col-5\">\n                  <label htmlFor=\"isEmptyValueAllowed\" className=\"form-label\">Empty Allowed</label><br />\n                  <input value={this.state.allowedEmpty} checked={this.state.allowedEmpty} onChange={this.handleOnChange} name=\"allowedEmpty\" className=\"form-check-input\" type=\"checkbox\" id=\"isEmptyValueAllowed\" />\n                </div>\n              </div>\n            </div>\n            <div id=\"schemaPanel\" className=\"col-3\">\n              <h5 className=\"panel-title\">Schema</h5>\n              <div className=\"row mb-3\">\n                <div className=\"col-12\">\n                  <label htmlFor=\"fieldType\" className=\"form-label\">Type</label>\n                  <select value={this.state.schemaType} name=\"schemaType\" onChange={this.handleOnChange} id=\"fieldType\" className=\"form-select\" aria-label=\"Param Type\">\n                    <option>Select</option>\n                    <option value=\"string\">String</option>\n                    <option value=\"integer\">Integer</option>\n                    <option value=\"number\">Number</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"row mb-3\">\n                <div className=\"col-12\">\n                  <label htmlFor=\"fieldFormat\" className=\"form-label\">Format</label>\n                  <select value={this.state.schemaFormat} onChange={this.handleOnChange} name=\"schemaFormat\" id=\"fieldFormat\" className=\"form-select\" aria-label=\"Param Format\">\n                    <option>Select</option>\n                    <option value=\"int32\">Int32</option>\n                    <option value=\"int64\">Int64</option>\n                    <option value=\"date\">Date</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"row mb-3\">\n                <div className=\"col-12\">\n                  <label htmlFor=\"enumValues\" className=\"form-label\">Enum</label>\n                  <input value={this.state.schemaEnum} onChange={this.handleOnChange} name=\"schemaEnum\" id=\"enumValues\" className=\"form-control\" placeholder=\"Ex: Dog,Cat\" />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div align=\"center\">\n            <button type=\"clear\" className=\"btn btn-dark button-margin-right\">CLEAR</button>\n            {this.state.editing === true ?\n              <button type=\"submit\" className=\"btn btn-dark\">SAVE</button> :\n              <button type=\"submit\" className=\"btn btn-dark\">ADD</button>}\n          </div>\n\n        </form>\n\n        <h5>Existing Parameters</h5>\n        <div className=\"existing mb-3\">\n          {existingParameters}\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default Parameters\n","import React from 'react';\n\nimport SwaggerUI from 'swagger-ui-react';\nimport \"swagger-ui-react/swagger-ui.css\";\n\nclass SwaggerVisualizer extends React.Component {\n\n  render(){\n    return (\n      <div>\n        <SwaggerUI spec={JSON.stringify(this.props.project)}/>\n      </div>\n    )\n  }\n\n}\n\n\nexport default SwaggerVisualizer;\n","import './app.css'\n\nimport ProjectInfo from './components/ProjectInfo'\nimport LicenseInfo from './components/LicenseInfo'\nimport Tags from './components/Tags'\nimport ServerInfo from './components/ServerInfo'\nimport ApiResource from './components/ApiResource'\nimport RequestBodies from './components/RequestBodies'\nimport ModelBuilder from './components/ModelBuilder'\nimport { Project } from './data/DataBuilder'\nimport ApiResponse from './components/ApiResponse'\nimport Home from './components/Home'\nimport Parameters from './components/Parameters'\n\nimport {\n  Link,\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport React from 'react';\n\nimport SwaggerVisualizer from './components/visualizer/SwaggerVisualizer';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      project: new Project()\n    }\n    this.handleOnUpdate = this.handleOnUpdate.bind(this)\n    this.handleDownloadFile = this.handleDownloadFile.bind(this)\n    this.isHomePage = this.isHomePage.bind(this)\n  }\n\n  handleOnUpdate(newProject) {\n    console.log(JSON.stringify(newProject));\n    this.setState({\n      project: newProject\n    })\n  }\n\n  handleDownloadFile() {\n    const data = this.state.project\n    const filename = 'api-builder-spec-openapi-v3.json'\n    const json = JSON.stringify(data)\n    const blob = new Blob([json], { type: 'application/json' })\n    const href = URL.createObjectURL(blob)\n    const downloadLink = document.createElement('a')\n    downloadLink.href = href\n    downloadLink.download = filename\n    document.body.appendChild(downloadLink)\n    downloadLink.click()\n    document.body.removeChild(downloadLink)\n  }\n\n  isHomePage() {\n    const currenPath = window.location.pathname\n    const defaultPath = \"/\"\n    const homePath = \"/home\"\n    return currenPath === defaultPath || currenPath === homePath\n  }\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"py-3 mb-3 bg-dark border-bottom\">\n            <div className=\"container-fluid d-grid gap-3 align-items-center\" style={{ gridTemplateColumns: '1fr 2fr' }}>\n              <div className=\"dropdown\">\n                <a href=\"/#\"\n                  className=\"d-flex align-items-center col-lg-2 mb-2 mb-lg-0 text-blue text-decoration-none dropdown-toggle\"\n                  id=\"dropdownNavLink\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\">\n                  <i className=\"bi bi-palette site-icon\"></i>\n                </a>\n                <ul className=\"dropdown-menu text-small shadow\" aria-labelledby=\"dropdownNavLink\" >\n                  <li><h6 className=\"dropdown-header\">Basic Config</h6></li>\n                  <li>\n                    <Link className=\"dropdown-item\" aria-current=\"page\" to=\"/project-info\">Project</Link>\n                  </li>\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/license\">License</Link>\n                  </li>\n                  <li><Link className=\"dropdown-item\" to=\"/tags\" >Tags</Link></li>\n                  <li><Link className=\"dropdown-item\" to=\"/servers\" >Servers</Link></li>\n\n                  <li><hr className=\"dropdown-divider\" /></li>\n                  <li><h6 className=\"dropdown-header\">Components</h6></li>\n                  <li><Link className=\"dropdown-item\" to=\"/model-builder\">Models</Link></li>\n                  <li><Link className=\"dropdown-item\" to=\"/parameters\">Parameters</Link></li>\n                  <li><Link className=\"dropdown-item\" to=\"/request-bodies\">Request Bodies</Link></li>\n                  <li><Link className=\"dropdown-item\" to=\"/responses\">Responses</Link></li>\n                  {\n                    // <li><Link className=\"dropdown-item\" to=\"/security-schemes\">Security Schemes</Link></li>\n                  }\n                  <li><hr className=\"dropdown-divider\" /></li>\n                  <li><h6 className=\"dropdown-header\">API Specs</h6></li>\n                  <li><Link className=\"dropdown-item\" to=\"/apis\">API Resources</Link></li>\n\n                </ul>\n              </div>\n\n              <div className=\"d-flex align-items-center\">\n                <div className=\"w-100 me-3 text-blue\">\n                  <h2 className=\"site-header-title\">\n                    <Link to=\"/home\">API Designer</Link>\n                    <span className=\"developed-by\">&nbsp;(&nbsp;Anand Muley&nbsp;)</span>\n                  </h2>\n                </div>\n                {\n                  //   <form className=\"w-100 me-3\">\n                  //   <input type=\"search\" className=\"form-control\" placeholder=\"Search...\" aria-label=\"Search\"/>\n                  // </form>\n                }\n                <ul className=\"nav col-12 col-lg-auto my-2 justify-content-center my-md-0 text-small\">\n                  <li>\n                    <a href=\"/#\" title=\"Download Spec\" className=\"nav-link text-blue\" onClick={this.handleDownloadFile}>\n                      <i className=\"bi bi-file-earmark-arrow-down-fill d-block header-icon\"></i>\n                    </a>\n                  </li>\n                </ul>\n                {\n                  // <div className=\"flex-shrink-0 dropdown\">\n                  //   <a href=\"/#\" className=\"d-block link-light text-decoration-none dropdown-toggle text-blue\" id=\"dropdownUser2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                  //     <i className=\"bi bi-list\"></i>\n                  //   </a>\n                  //   <ul className=\"dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser2\" >\n                  //     <li><a href=\"/#\" className=\"dropdown-item\" >New project...</a></li>\n                  //     <li><a href=\"/#\" className=\"dropdown-item\" >Settings</a></li>\n                  //     <li><a href=\"/#\" className=\"dropdown-item\" >Profile</a></li>\n                  //     <li><hr className=\"dropdown-divider\" /></li>\n                  //     <li><a href=\"/#\" className=\"dropdown-item\" >Sign out</a></li>\n                  //   </ul>\n                  // </div>\n                }\n              </div>\n            </div>\n          </header>\n          <div className=\"container-fluid pb-3\">\n            <div className=\"d-grid gap-3\" style={{ gridTemplateColumns: '2fr 3fr' }}>\n              <div className=\"bg-light border rounded-3 left-panel\">\n                <div className=\"site-title\">\n                  <h2>Designer</h2>\n                </div>\n                <Switch>\n                  <Route path=\"/project-info\">\n                    <ProjectInfo project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/license\">\n                    <LicenseInfo project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/tags\">\n                    <Tags project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/servers\">\n                    <ServerInfo project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/apis\">\n                    <ApiResource project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/request-bodies\">\n                    <RequestBodies project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/model-builder\">\n                    <ModelBuilder project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/responses\">\n                    <ApiResponse project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/parameters\">\n                    <Parameters project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/home\">\n                    <Home project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                  <Route path=\"/\">\n                    <Home project={this.state.project} onChange={this.handleOnUpdate} />\n                  </Route>\n                </Switch>\n              </div>\n              {(window.location.pathname !== '/' || window.location.pathname !== '/home') &&\n                <div className=\"bg-light border rounded-3\">\n                  <SwaggerVisualizer project={this.state.project} />\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// BootStrap Import\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}